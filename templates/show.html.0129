<!DOCTYPE HTML>
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>微博QA - 话题接口自动化测试</title>
<link href="{{ static_url("css/style.css") }}" rel="stylesheet" type="text/css">
<link href="{{ static_url("css/960.css") }}" rel="stylesheet" type="text/css">

<link href="{{ static_url("css/bootstrap.css") }}" rel="stylesheet" type="text/css">
<link rel="stylesheet" href="{{ static_url("css/zTreeStyle/zTreeStyle.css") }}" type="text/css">
<script type="text/javascript" src="{{ static_url("js/jquery.min.js") }}"></script>
<script type="text/javascript" src="{{ static_url("js/jquery.ztree.core-3.5.js") }}"></script>
<script type="text/javascript" src="{{ static_url("js/jquery.ztree.excheck-3.5.js") }}"></script>
<script src="{{ static_url("js/bootstrap.min.js") }}"></script>

<script type="text/javascript" src="{{ static_url("js/EdTable.js") }}"></script> 

<style type="text/css">
#loading{position:absolute;left:33%;top:100px;width:159px;color:#999;font-size:18px;height:40px;font-weight:300;padding-top:200px;}
</style>

<SCRIPT type="text/javascript">
		<!--
		var setting = {
			view: {
                showLine: false,
                showIcon: false,
			},
			check: {
				enable: true
			},
			data: {
				simpleData: {
					enable: true
				}
			},
			callback: {
			    onCheck: onCheck,
			}
		};
        var zNodes ={{zNodes}};
		var code, log, className = "dark";
        var paras="";
		function onCheck(e, treeId, treeNode) {
         if(treeNode.checked)
         {
            if(treeNode.isParent)
            {
                var nodes = treeNode.children;
                for(var i=0; i<nodes.length; i++) {
                    if(nodes[i].checked)
                    {
                        paras=paras+","+ treeNode.name+"|"+nodes[i].name;
                    }
                }
            }
            else
            {
                paras=paras+","+treeNode.getParentNode().name+"|"+treeNode.name;
            }
         }
         else
          {
             result="";
             paras=paras.split(',');
             for(var p in paras){
              if(paras[p].indexOf(treeNode.name)==-1 && paras[p]!="")
              {
                      result=result+','+paras[p];
              }

             }

             paras=result;
         }
        }
        function addEvent(v,l){
            var str = '';
            str = "<tr style='height:37px' align='center'>";
            for(var i=1;i<l;i++)
            {
                str = str + "<td class='editable simpleInput' style='word-break:break-all'></td>";
            }
            str = str +"</tr>";
            $("#tab"+v).append(str);
            EdTable.initBindGridEvent();
        }
        function Save(v){
            var tab=document.getElementById("tab"+v);
            var rows=tab.rows;
            var paras='';
            var url=document.getElementById("url"+v);
            paras=paras+url.innerHTML+"#";
            for(var i=0;i<rows.length;i++)
            {
                for(var j=0;j<rows[i].cells.length;j++)
                {
                    if(i==0&&j<6)
                    {
                        paras=paras+"methodlist|islogin|username|userpassword|expectedResult|casenotes";
                        j=5;
                    }
                    paras=paras+rows[i].cells[j].innerHTML+"|";
                }
                paras=paras+"*";
            }
            if(paras == ""){
                alert("Please check the api");
            }else{
                $.ajax({
                    type:"post",
                    url:"/save",
                    data:{paras:paras},
                    beforeSend:loading,
                    success:function(result){
                       // alert(result);
                        var tb_str = '';
                        var rel_arr = result.split('*');
                        for(var v in rel_arr){
                            var l = rel_arr[v].split('#');
                            var res_arr=l[1].split('$');
                            for(var n in res_arr)
                            {
                            var res=res_arr[n].split('|');
                            if(n==0)
                            {
                            tb_str = tb_str +"<thead><tr>";
                            for(var i=0;i<res.length-1;i++)
                            {
                               if(res[i].split('=')[0]=="methodlist")
                               {
                                   result="请求方式";
                               }
                               else if(res[i].split('=')[0]=="islogin")
                               {
                                   result="是否需要";
                               }
                               else if(res[i].split('=')[0]=="username")
                               {
                                   result="登录用户";
                               }
                               else if(res[i].split('=')[0]=="userpassword")
                               {
                                   result="登录密码";
                               }
                               else if(res[i].split('=')[0]=="expectedResult")
                               {
                                   result="期望结果";
                               }
                               else if(res[i].split('=')[0]=="casenotes")
                               {
                                   result="用例说明";
                               }
                               else
                               {
                                   result=res[i].split('=')[0]
                               }
                               tb_str = tb_str +"<th style='word-break:break-all'>"+result+"</th>";
                            }
                            tb_str = tb_str +"</tr></thead><tbody><tr>";
                            }
                            for(var i=0;i<res.length-1;i++)
                            {
                            tb_str = tb_str +"<td class='editable simpleInput' style='word-break:break-all'>"+res[i].split('=')[1]+"</td>";
                            }
                            tb_str = tb_str +"</tr>";
                            }
                            tb_str =tb_str+"</tbody>";//</table>";
                            }
                        alert("sucess");
                        tab.innerHTML = tb_str;
                        EdTable.initBindGridEvent();
                    },
                    error:function(){
                    }

                });
            }
        }
        function edit(){
         //   alert(paras);
           if(paras == "") {
               alert("Please check the api");
           } else {
               $.ajax({
                  type:"post",
                  url:"/edit",
                  data: {paras:paras},
                  beforeSend:loading,
                  success:function(result) {
                        $('#loading').hide();
                        $('#test_res').hide();
                        $('#accordion2').show();
						var tb_str = '';
                        var rel = document.getElementById('accordion2');
                        var rel_arr = result.split('*');
                        for(var v in rel_arr){
                            tb_str += "<div class='accordion-group'><div class='accordion-heading'><a id='url"+v+"'   class='accordion-toggle' data-toggle='collapse' data-parent='#accordion2' href='#collapse"+v+"'>";
                            var l = rel_arr[v].split('#');
                            tb_str = tb_str + l[0] +'</a></div><div id="collapse'+v+'" class="accordion-body collapse"><div class="accordion-inner"><button type="button" onclick="addEvent('+v+','+l[1].split('$')[0].split('|').length+')" class="btn btn-default">添加</button><button type="button" onclick="Save('+v+')" class="btn btn-default">保存</button><table id="tab'+v+'" class="table table-bordered editableTable" style="table-layout:fixed">';
                            var res_arr=l[1].split('$');
                            for(var n in res_arr)
                            {
                            var res=res_arr[n].split('|');
                            if(n==0)
                            {
                            tb_str = tb_str +"<thead><tr>";
                            for(var i=0;i<res.length-1;i++)
                            {
                                if(res[i].split('=')[0]=="methodlist")
                                {
                                    result="请求方式";
                                }
                                else if(res[i].split('=')[0]=="islogin")
                                {
                                    result="是否需要";
                                }
                                else if(res[i].split('=')[0]=="username")
                                {
                                    result="登录用户";
                                }
                                else if(res[i].split('=')[0]=="userpassword")
                                {
                                    result="登录密码";
                                }
                                else if(res[i].split('=')[0]=="expectedResult")
                                {
                                    result="期望结果";
                                }
                                else if(res[i].split('=')[0]=="casenotes")
                                {
                                    result="用例说明";
                                }
                                else
                                {
                                    result=res[i].split('=')[0]
                                }
                            tb_str = tb_str +"<th style='word-break:break-all'>"+result+"</th>";
                                
                            }
                            tb_str = tb_str +"</tr></thead><tbody><tr>";
                            }
                            for(var i=0;i<res.length-1;i++)
                            {
                            tb_str = tb_str +"<td class='editable simpleInput' style='word-break:break-all'>"+res[i].split('=')[1]+"</td>";
                            }
                            tb_str = tb_str +"</tr>";
                            }
                            tb_str =tb_str+"</tbody></table>";
                            tb_str = tb_str +"</div></div></div>";
                            }
                        rel.innerHTML = tb_str;
                        EdTable.initBindGridEvent();
                  },
                  error: function() {
                  }
            });  
         }

        }
        function submit() {
            $('#test_res').show();
            $('#accordion2').hide();
            var host="";
            if(document.getElementById('host').value=="多个host用|分隔")
                host="127.0.0.1";
            else
                host=document.getElementById('host').value;
           // alert(host);
            if(paras == "") {
                alert("Please check the api");
            } else {
                $.ajax({
                    type:"post",
                    url:"/result",
                    data: {paras:paras,host:host},
                    beforeSend:loading,
                    success:function(result) {
                        $('#loading').hide(); 
                        var tb_str = '';
                        var rel = document.getElementById('accordion1');
                        var rel_arr = result.split(';');
                        for(var v in rel_arr){
                           if(rel_arr[v])
                           {
                              var res=rel_arr[v].split(':');
                              tb_str += "<div class='accordion-group'><div class='accordion-heading'><a id='url"+v+"'   class='accordion-toggle' data-toggle='collapse' data-parent='#accordion1' href='#collapse"+v+"'>";
                              if(res[0]=="127.0.0.1")
                                  str="线上环境";
                              else
                                  str=res[0];
                              tb_str = tb_str + str +'</a></div><div id="collapse'+v+'" class="accordion-body collapse"><div class="accordion-inner">';
                              tb_str += "<div class='result right'><div class='page-spacer'><table id='rounded-corner'   summary='Huati-API Auto-Testing Result'><thead><tr><th scope='col' class='rounded'>接口名称</th><th scope='col'         class='rounded'>结果统计</th><th scope='col' class='rounded'>结果详情</th></tr></thead><tbody id='result'><tr>"; 
                              var res_arr=res[1].split(',');
                              for(var a in res_arr)
                              {
                                if(res_arr[a])
                                {
                                 var l = res_arr[a].split('|');
                                 tb_str = tb_str + '<td>' + l[0] + '</td>';
                                 tb_str = tb_str +"<td>Total: <b>"+l[2]+"</b>  Pass: <b><font color='Green'>"+l[3]+"</font></b>  Fail: <b><font color='Red'>"+l[4]+"</font></b></td>";
                                 if(str=="线上环境")
                                 {
                                 tb_str = tb_str + "<td><a target='_blank' href='http://10.210.230.35/huatiAuto/data/result/127.0.0.1/"+l[1] +"'>"+l[1]+"</a></td></tr>";
                                 }
                                 else
                                 {
                                 tb_str = tb_str + "<td><a target='_blank' href='http://10.210.230.35/huatiAuto/data/result/"+str+"/"+l[1] +"'>"+l[1]+"</a></td></tr>";
                                 }
                                }
                              }
                               tb_str=tb_str+"</tbody></table></div></div>";
                               tb_str = tb_str +"</div></div></div>";
                            }
                        }
                        rel.innerHTML = tb_str;
                        console.log(result);
                    },
                    error: function() {
                    }
                });  
            }
        }
        //loading
        function loading(){ 
            $('#loading').show();
            $('#loading').html('<img src="{{ static_url("images/loading.gif") }}" width="28" height="28" align="absmiddle"/>执行中....'); 
        }

		$(document).ready(function(){
			$.fn.zTree.init($("#treeDemo"), setting, zNodes);
            $("#treeDemo").prepend("<br>");
             $("#treeDemo").prepend("<div id=\"datetimepicker1\"> <label class=\"control-label\"                        width=\"80px\">执行host：</label><div class=\"controls\" margin-left=\"100px\"><textarea type=\"text\" name=\"host\"     id=\"host\" rows=\"3\" style=\"overflow-y:visible\" onfocus=\"if(value==\'多个host用|分隔\'){value=''}\" onblur=\"if (value ==''){value='多个host用|分隔'}\">多个host用|分隔</textarea></div></div>");

		});
		//-->
	</SCRIPT>
</head>

<body>
<div id="page_overlay">
	<div id="page_content">
		<div class="container_12">
	<div class="grid_3">
    	<div class="left-panel">
        	<div id="logo">
            	<a href="#"><img src="{{ static_url("images/logo.jpg") }}" alt=""></a>
            </div>
            <h2>#话题接口列表:</h2>
            <div>
            <button type="button1" onclick="submit()" class="btn btn-default">执行</button>
            <button type="button2" onclick="edit()" class="btn btn-default">编辑</button> 
            </div>
            <div class="content_wrap">
            <div class="zTreeDemoBackground left">
            <ul id="treeDemo" class="ztree" overflow="auto">
            </ul>
                    </div>
					
            </div>

        </div>
  	</div>
  	<!-- end .grid_3 -->
    <div class="panel-right">
        
                <!--title Start-->
        <div id="right-title" class="right-title-first">
		
            <div class="right-title-icon">&nbsp;</div>
                
                <div class="right-title">接口自动化</div>
                
                <div class="clearfix"></div>
                
                            
           
          
        </div>
        <!--tiltle End-->
        
        
        <!--Blog Start-->
         <div id="blog" class="content">
            <div class="content-bg">
			<div class="bs-docs-example">
              <div class="accordion" id="accordion2">
              </div>
            </div>
                <div id="test_res">
                <div class="page-title">测试结果概要：</div>
                <div class="bs-docs-example">
                  <div id="loading"></div>
                   <div class="accordion" id="accordion1">
                   
                   </div>
                </div>
                <div class="clearfix"></div>
               <!-- <div class="result right">
					<div class="page-spacer">
						<table id="rounded-corner" summary="Huati-API Auto-Testing Result">
							<thead>
								<tr>
							    <th scope="col" class="rounded">接口名称</th>
                <th scope="col" class="rounded">结果统计</th>
                <th scope="col" class="rounded">结果详情</th>
                </tr>
                </thead>
                <tbody id="result">
                </tbody>
                </table>
                        </div>
                    </div>-->
             </div>
            </div>
        </div>
        <!--Blog End-->
        
       
        
    </div>
</div>
	</div>
</div>






</body>
</html>
